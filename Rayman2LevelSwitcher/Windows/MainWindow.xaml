<Window x:Class="Rayman2LevelSwitcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Rayman2LevelSwitcher"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Title="Rayman 2 - Level Switcher"
        Height="480"
        Width="640"
        MinHeight="250"
        MinWidth="250"
        Closing="MainWindow_OnClosing"
        d:DataContext="{d:DesignInstance local:GameManagerViewModel}">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Padding" Value="5 2" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Exit"
                          InputGestureText="Alt+F4"
                          Command="{x:Static local:CommonCommands.CloseAppCommand}" />
            </MenuItem>

            <MenuItem Header="Mods">

                <MenuItem Header="Void"
                          Command="{Binding Path=ActivateVoidCommand}" />

                <MenuItem Header="0 HP"
                          Command="{Binding Path=ActivateNoHealthCommand}" />

                <MenuItem Header="GLM Monitor 2000"
                          Command="{Binding Path=ShowGlmWindowCommand}" />

            </MenuItem>

            <MenuItem Header="Settings">
                <MenuItem Header="Enable hotkeys"
                          IsCheckable="True"
                          IsChecked="{Binding Path=App.HotkeysEnabled}"
                          ToolTip="Enables hotkeys:&#x0a;R - reload level&#x0a;K - previous level&#x0a;L - next level&#x0a;P - save position&#x0a;O - load position&#x0a;B - add bookmark" />
            </MenuItem>

        </Menu>

        <Grid Grid.Row="1"
              Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="50" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition MinWidth="50"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0"
                  Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" 
                                   SharedSizeGroup="Bottom"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="Levels"
                           HorizontalAlignment="Center"
                           FontWeight="Bold"
                           FontSize="14" />

                <TreeView Grid.Row="1"
                          ItemsSource="{Binding Path=App.LevelContainers, Mode=OneTime}"
                          VerticalAlignment="Stretch"
                          Margin="0 10">

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Levels, Mode=OneTime}">
                            <TextBlock Text="{Binding Path=Name, Mode=OneTime}" 
                                       TextWrapping="WrapWithOverflow"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                </TreeView>

                <StackPanel Grid.Row="2">

                    <WrapPanel Orientation="Horizontal"
                               Margin="0 5">

                        <Button Content="Reload level"
                                Command="{Binding Path=ReloadLevelCommand}"
                                Margin="0 0 10 0"/>

                        <Button Content="Random level"
                                Command="{Binding Path=LoadRandomLevelCommand}"/>

                    </WrapPanel>

                    <StackPanel Orientation="Horizontal"
                                Margin="0 5">

                        <StackPanel>

                            <Button Content="Save pos"
                                    Command="{Binding Path=SavePositionCommand}"
                                    Margin="0 0 0 5"/>

                            <Button Content="Load pos"
                                    Command="{Binding Path=LoadSavedPositionCommand}"/>

                        </StackPanel>

                        <StackPanel Margin="10 0 0 0"
                                    VerticalAlignment="Center">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="X: " />
                                <TextBlock Text="{Binding Path=SavedXPosition, StringFormat={}{0:F3}}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Y: " />
                                <TextBlock Text="{Binding Path=SavedYPosition, StringFormat={}{0:F3}}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Z: " />
                                <TextBlock Text="{Binding Path=SavedZPosition, StringFormat={}{0:F3}}" />
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>

                </StackPanel>

            </Grid>

            <GridSplitter Grid.Column="1"
                          ResizeDirection="Columns"
                          ResizeBehavior="PreviousAndNext"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch" />

            <Grid x:Name="BookmarkPanel"
                  Grid.Column="2"
                  Margin="10"
                  d:DataContext="{d:DesignInstance local:BookmarksViewModel}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"
                                   SharedSizeGroup="Bottom" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="Bookmarks"
                           HorizontalAlignment="Center"
                           FontWeight="Bold"
                           FontSize="14" />

                <ListBox Grid.Row="1"
                         ItemsSource="{Binding Path=BookmarkItems}"
                         SelectedIndex="{Binding Path=SelectedBookmarkIndex}"
                         dd:DragDrop.IsDragSource="true"
                         dd:DragDrop.IsDropTarget="true"
                         Margin="0 10">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <EventSetter Event="MouseDoubleClick" Handler="Listbox_bookmarklist_MouseDoubleClick" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.InputBindings>
                        <KeyBinding Key="F2" Command="{Binding Path=RenameBookmarkCommand}" />
                        <KeyBinding Key="Delete" Command="{Binding Path=DeleteBookmarkCommand}" />
                        <KeyBinding Key="Back" Command="{Binding Path=DeleteBookmarkCommand}" />
                    </ListBox.InputBindings>
                </ListBox>

                <StackPanel Grid.Row="2">
                    
                    <WrapPanel Orientation="Horizontal">

                        <Button Content="Load Bookmark"
                                Margin="0 0 10 0"
                                Command="{Binding Path=LoadBookmarkCommand}"
                                IsEnabled="{Binding Path=SelectedBookmarkIndex, Converter={local:IsValidIndexConverter}}"/>

                        <Button Content="Add"
                                Margin="0 0 10 0"
                                HorizontalAlignment="Left"
                                Command="{Binding Path=AddBookmarkCommand}" />

                        <Button Content="Rename"
                                Margin="0 0 10 0"
                                Command="{Binding Path=RenameBookmarkCommand}"
                                IsEnabled="{Binding Path=SelectedBookmarkIndex, Converter={local:IsValidIndexConverter}}"/>

                        <Button Content="Delete"
                                Margin="0 0 10 0"
                                Command="{Binding Path=DeleteBookmarkCommand}" 
                                IsEnabled="{Binding Path=SelectedBookmarkIndex, Converter={local:IsValidIndexConverter}}"/>

                    </WrapPanel>

                    <TextBlock Text="Current Level:"
                               Margin="0 10 0 0"/>

                    <TextBlock Text="{Binding Path=CurrentLevelName}"
                               Margin="0 3 0 0"
                               TextWrapping="WrapWithOverflow"/>

                </StackPanel>

            </Grid>

        </Grid>
    </Grid>
</Window>